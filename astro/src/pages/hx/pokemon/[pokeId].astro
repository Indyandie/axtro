---
export const partial = true
export const prerender = false

const { pokeId } = Astro.params
import { db, eq, Pokemon } from 'astro:db'

const [pokemon] = await db.select().from(Pokemon).where(eq(Pokemon.id, pokeId))
const reqMethod = Astro.request.method

const {
  name,
  id,
  weight,
  height,
  sprite,
  cries,
  types,
  official,
} = pokemon
const classId = name + pokeId || null

if (reqMethod === 'DELETE') {
  await db.delete(Pokemon).where(eq(Pokemon.id, pokeId))
  Astro.response.headers.set('HX-Trigger', 'deletePokemon')
}
---

{
  (pokemon.id > 0 && reqMethod === 'GET') ? (
    <article id={classId} class={`${classId} min-w-[300px]`}>
      <h2>{name}</h2>
      <p>
        <code class="mr-3">
          {id}
        </code>
        {official && 'ðŸ‘‘'}
      </p>
      <img src={sprite} alt="">
      <table class="my-8">
        <tbody>
          <tr>
            <td>weight</td>
            <td>{weight}</td>
          </tr>
          <tr>
            <td>height</td>
            <td>{height}</td>
          </tr>
          <tr>
            <td>types</td>
            <td>{types}</td>
          </tr>
        </tbody>
      </table>
      <details class="my-4">
        <summary>actions</summary>
        <button
          hx-delete={`/hx/pokemon/${pokeId}`}
          hx-swap="outerHTML"
          hx-target={`find #${classId}, .${classId}`}
        >
          delete
        </button>
      </details>
    </article>
  ) : <article>Not found!</article>
}
